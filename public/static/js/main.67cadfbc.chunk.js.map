{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67cadfbc.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Event Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth]  Start register',\r\n    authStartTokenRenew: '[auth]  Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Pablo'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ \r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id ) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n} ","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate(),\r\n    }) );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const res = await fetchConToken('events', event, 'POST' );\r\n            const body = await res.json();\r\n\r\n            if( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = event => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = event => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = event => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const res = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await res.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = event => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const res = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await res.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const res = await fetchConToken('events');\r\n            const body = await res.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const res = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await res.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const res = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await res.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const res = await fetchConToken( 'auth/renew' );\r\n        const body = await res.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( eventLogout() );\r\n\r\n    }\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: '',\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\"> { name } </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nif ( process.env.NODE_ENV !== 'test' ) {\r\n    Modal.setAppElement('#root');\r\n}\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        }else{\r\n            setFormValues( initEvent );\r\n        }\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        setFormValues( initEvent );\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const handleStartDateChange = e => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = e => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error','La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        }else{\r\n            dispatch( eventStartAddNew( formValues ));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            ariaHideApp={ !process.env.NODE_ENV === 'test' }\r\n        >\r\n            <h1>{ activeEvent ? 'Editar evento' : 'Nuevo evento' }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmit }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange } \r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange } \r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <strong>- { user.name } </strong>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { events, activeEvent }  = useSelector(state => state.calendar);\r\n\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ]);\r\n\r\n    const onDoubleClick = e => {\r\n        // console.log(e);\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelect = e => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = e => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = e => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor:  ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelect }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            \r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : ( <Redirect to='/login' /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : ( <Redirect to='/' /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [ dispatch ]);\r\n\r\n    if( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}